{
    "openapi": "3.0.0",
    "info": {
        "title": "MyRide",
        "description": "API Documentation for MyRide",
        "contact": {
            "email": "flazen.edu@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in to the Apps",
                "operationId": "26ae6f7a2668f358293a502309985206",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "flazefy"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "nopass123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "286|L5fqrLCDDCzPRLKngtm2FM9wq1IU2xFZSVAm10yp874a1a85"
                                        },
                                        "role": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "result": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "83ce75db-4016-d87c-2c3c-db1e222d0001"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "flazefy"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "flazen.edu@gmail.com"
                                                },
                                                "telegram_user_id": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "telegram_is_valid": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-14 02:28:37"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-25 09:37:20"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "result": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "account is not found or have wrong password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "result": {
                                            "type": "string",
                                            "example": "wrong username or password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register an account",
                "operationId": "06be8aeac0568d6da099bf9de9631bec",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password",
                                    "email"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "flazefy"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "nopass123"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "tester@gmail.com"
                                    },
                                    "telegram_user_id": {
                                        "type": "string",
                                        "example": "1317625123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "register successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user has been created"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "83ce75db-4016-d87c-2c3c-db1e222d0001"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "flazefy"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "flazen.work@gmail.com"
                                                },
                                                "telegram_user_id": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "telegram_is_valid": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-14 02:28:37"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-25 09:37:20"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "result": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "user with same email or username had been registered, try using another",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user with same email or username has been used"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register/validate": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Validate an account register's request",
                "operationId": "325b5ef485ca0b33ecf7aad93c7f8e82",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "token"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "flazefy"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "ABC123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "validation successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user has been validated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "result": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "token is invalid or user request not found or has been accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "token is invalid or request not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign out from Apps",
                "description": "This request is used to get sign out from the Apps (sign out from the session). This request is using MySql database, and have a protected routes.",
                "operationId": "8859fad6cbeb2081a7611f5b944b4630",
                "responses": {
                    "200": {
                        "description": "Logout success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/clean": {
            "get": {
                "tags": [
                    "Clean"
                ],
                "summary": "Get all clean history",
                "description": "This request is used to get all clean history with pagination. This request is using MySql database, and have a protected routes.",
                "operationId": "6f51553a069b144e1f6ac9f846443e20",
                "responses": {
                    "200": {
                        "description": "clean fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "clean fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "ab8b8d0e-d74d-11ed-afa1-0242ac120002"
                                                            },
                                                            "vehicle_name": {
                                                                "type": "string",
                                                                "example": "Honda - Brio RS MT"
                                                            },
                                                            "vehicle_plate_number": {
                                                                "type": "string",
                                                                "example": "D 1610 ZRB"
                                                            },
                                                            "clean_desc": {
                                                                "type": "string",
                                                                "example": "Cuci mobil"
                                                            },
                                                            "clean_by": {
                                                                "type": "string",
                                                                "example": "Carwash"
                                                            },
                                                            "clean_tools": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "is_clean_body": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "is_clean_window": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "is_clean_dashboard": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "is_clean_tires": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "is_clean_trash": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "is_clean_engine": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "is_clean_seat": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "is_clean_carpet": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "is_clean_pillows": {
                                                                "type": "integer",
                                                                "example": 0
                                                            },
                                                            "clean_address": {
                                                                "type": "string",
                                                                "example": "AutoService Jl. Kapten Tandean"
                                                            },
                                                            "clean_start_time": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2024-02-29 21:30:00"
                                                            },
                                                            "clean_end_time": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2024-02-29 22:20:00"
                                                            },
                                                            "is_fill_window_cleaning_water": {
                                                                "type": "integer",
                                                                "example": 0
                                                            },
                                                            "is_clean_hollow": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2024-03-27 12:33:05"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 14
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "clean failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "clean history not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/dictionary/{id}": {
            "delete": {
                "tags": [
                    "Dictionary"
                ],
                "summary": "Delete dictionary by id",
                "operationId": "41d0a45e2befa472da1adade242b757d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dictionary ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "dictionary permentally deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "dictionary permentally deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "dictionary failed to permentally deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "dictionary not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/dictionary": {
            "post": {
                "tags": [
                    "Dictionary"
                ],
                "summary": "Post dictionary",
                "description": "Create a new dictionary using the given name and category. This request is using MySQL database.",
                "operationId": "c00bb932223a0676d61b6d1079013eca",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dictionary_type",
                                    "dictionary_name"
                                ],
                                "properties": {
                                    "dictionary_type": {
                                        "type": "string",
                                        "example": "trip_category"
                                    },
                                    "dictionary_name": {
                                        "type": "string",
                                        "example": "test category"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Dictionary created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "dictionary created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "dictionary name must be at least 2 characters"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "dictionary type must be one of the following values trip_category, vehicle_merk, vehicle_type, vehicle_category, vehicle_status, vehicle_default_fuel, vehicle_fuel_status, vehicle_transmission_code"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "dictionary_name is a required field"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "dictionary name has been used. try another"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/dictionary/type/{type}": {
            "get": {
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get dictionary by type",
                "description": "This request is used to get dictionary by its `dictionary_type`, that can be trip_category, vehicle_merk, vehicle_type, vehicle_category, vehicle_status, vehicle_default_fuel, vehicle_fuel_status, or vehicle_transmission_code. This request is using MySql database, and have a protected routes.",
                "operationId": "c6cd36c8c3508387249c596947b82e6f",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Dictionary Type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "trip_category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "dictionary fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "dictionary fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "dictionary_name": {
                                                        "type": "string",
                                                        "example": "Others"
                                                    },
                                                    "dictionary_type": {
                                                        "type": "string",
                                                        "example": "trip_category"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "dictionary failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "dictionary not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/fuel": {
            "get": {
                "tags": [
                    "Fuel"
                ],
                "summary": "Get all fuel",
                "description": "This request is used to get all fuel purchase history. This request is using MySql database, have a protected routes, and have template pagination.",
                "operationId": "a6bfc63fd137cb123e444ec1f036d421",
                "responses": {
                    "200": {
                        "description": "Fuel records fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "fuel fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                            },
                                                            "vehicle_plate_number": {
                                                                "type": "string",
                                                                "example": "B 1234 CD"
                                                            },
                                                            "vehicle_type": {
                                                                "type": "string",
                                                                "example": "City Car"
                                                            },
                                                            "fuel_volume": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 45.5
                                                            },
                                                            "fuel_price_total": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 325000
                                                            },
                                                            "fuel_brand": {
                                                                "type": "string",
                                                                "example": "Pertamina"
                                                            },
                                                            "fuel_type": {
                                                                "type": "string",
                                                                "example": "Pertamax"
                                                            },
                                                            "fuel_ron": {
                                                                "type": "integer",
                                                                "example": 92
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-20 22:53:47"
                                                            },
                                                            "fuel_bill": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://example.com/uploads/fuel_bills/bill123.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "fuel failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "fuel not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/history": {
            "get": {
                "tags": [
                    "History"
                ],
                "summary": "Get all history",
                "description": "This request is used to get all history when user use the App. This request is using MySql database, have a protected routes, and have template pagination.",
                "operationId": "b51b619e3c45ec6458bcca590a3a70e8",
                "responses": {
                    "200": {
                        "description": "history fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "history fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                            },
                                                            "history_type": {
                                                                "type": "string",
                                                                "example": "Create"
                                                            },
                                                            "history_context": {
                                                                "type": "string",
                                                                "example": "Barang bawaan"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-20 22:53:47"
                                                            },
                                                            "created_by": {
                                                                "type": "string",
                                                                "example": "2d98f524-de02-11ed-b5ea-0242ac120002"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "history failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "history not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/question/faq": {
            "get": {
                "tags": [
                    "Question"
                ],
                "summary": "Get showing FAQ",
                "description": "This request is used to get showing FAQ in the welcome page. This request is using MySql database",
                "operationId": "27dc39035fffcbd37f6e60fbbf93d66f",
                "responses": {
                    "200": {
                        "description": "faq fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "faq fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "faq_question": {
                                                        "type": "string",
                                                        "example": "lorem ipsum?"
                                                    },
                                                    "faq_answer": {
                                                        "type": "string",
                                                        "example": "consectetuer adipiscing elit"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "faq failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "faq not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reminder/next": {
            "get": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Get next reminder",
                "description": "This request is used to get the nearest reminder for now. This request is using MySql database, and have a protected routes.",
                "operationId": "5892c0a04affcf06bfcf83eae264d1d2",
                "responses": {
                    "200": {
                        "description": "reminder fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "reminder_title": {
                                                    "type": "string",
                                                    "example": "service berkala"
                                                },
                                                "reminder_context": {
                                                    "type": "string",
                                                    "example": "Service"
                                                },
                                                "reminder_body": {
                                                    "type": "string",
                                                    "example": "at 90.000 KM"
                                                },
                                                "remind_at": {
                                                    "type": "string",
                                                    "example": "2025-09-05 00:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reminder failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reminder": {
            "get": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Get all reminder history",
                "description": "This request is used to get all reminder history with pagination. This request is using MySql database, and have a protected routes.",
                "operationId": "0e57a988ebf3ad38c9c240003759a8c0",
                "responses": {
                    "200": {
                        "description": "reminder fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "28668090-5653-dff5-2d8f-af603fc36b45"
                                                            },
                                                            "reminder_title": {
                                                                "type": "string",
                                                                "example": "Routine service"
                                                            },
                                                            "vehicle_plate_number": {
                                                                "type": "string",
                                                                "example": "D 1610 ZBC"
                                                            },
                                                            "vehicle_type": {
                                                                "type": "string",
                                                                "example": "City Car"
                                                            },
                                                            "reminder_context": {
                                                                "type": "string",
                                                                "example": "Service"
                                                            },
                                                            "reminder_body": {
                                                                "type": "string",
                                                                "example": "Lorem ipsum"
                                                            },
                                                            "reminder_attachment": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "attachment_type": {
                                                                            "type": "string",
                                                                            "example": "location"
                                                                        },
                                                                        "attachment_value": {
                                                                            "type": "string",
                                                                            "example": "-6.223617982933017, 106.84620287273809"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    {
                                                                        "attachment_type": "location",
                                                                        "attachment_value": "-6.223617982933017, 106.84620287273809"
                                                                    }
                                                                ]
                                                            },
                                                            "remind_at": {
                                                                "type": "string",
                                                                "example": "2025-06-24 10:54:42",
                                                                "nullable": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-06-19 07:54:42"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 14
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reminder failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder history not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/total/vehicle/{context}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total vehicle by context",
                "description": "This request is used to get total vehicle by `context`, that can be vehicle_merk, vehicle_type, vehicle_status, vehicle_fuel_status, vehicle_transmission, and vehicle_color. This request is using MySql database, and have a protected routes.",
                "operationId": "9ac23a6e672074fbed33d71224ad074f",
                "parameters": [
                    {
                        "name": "context",
                        "in": "path",
                        "description": "Vehicle Context",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "vehicle_merk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Honda"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/total/trip/{year}/{vehicle_id}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total trip by vehicle per month",
                "description": "This request is used to get total trip by vehicle per month by given `year`. This request is using MySql database, and have a protected routes.",
                "operationId": "272039e94d78c4829f6c2acc439d2ad1",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Trip created year",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "2024"
                        }
                    },
                    {
                        "name": "vehicle_id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ab8b8d0e-d74d-11ed-afa1-0242ac120002"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/total/trip/{year}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total trip per month",
                "description": "This request is used to get total trip per month by given `year`. This request is using MySql database, and have a protected routes.",
                "operationId": "e113c3600c9fd19089953b6c3647336d",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Trip created year",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "2024"
                        }
                    },
                    {
                        "name": "vehicle_id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ab8b8d0e-d74d-11ed-afa1-0242ac120002"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/total/fuel/{context}/{year}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total fuel per month",
                "description": "This request is used to get total fuel per month by given `year` and `context`. This request is using MySql database, and have a protected routes.",
                "operationId": "b4b170f136a5fdbbbfce97e9627b3dd8",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Fuel consumption created year",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "2024"
                        }
                    },
                    {
                        "name": "context",
                        "in": "path",
                        "description": "Context can be `fuel_volume` or `fuel_price_total`",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "fuel_volume"
                        }
                    },
                    {
                        "name": "vehicle_id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ab8b8d0e-d74d-11ed-afa1-0242ac120002"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/summary": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get summary of the apps",
                "description": "This request is used to get summary of the apps. This request is using MySql database, and have a protected routes.",
                "operationId": "bd16e91d89bc5e6e2ae77d2ac6f8a9c3",
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_user": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "total_vehicle": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "total_service": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "total_clean": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "total_driver": {
                                                    "type": "integer",
                                                    "example": 4
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/trip": {
            "get": {
                "tags": [
                    "Trip"
                ],
                "summary": "Get all trip history",
                "description": "This request is used to get all trip history with pagination. This request is using MySql database, and have a protected routes.",
                "operationId": "f1bd5ed3638a68bd70161cf74ffafcb8",
                "responses": {
                    "200": {
                        "description": "trip fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "trip fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "28668090-5653-dff5-2d8f-af603fc36b45"
                                                            },
                                                            "vehicle_name": {
                                                                "type": "string",
                                                                "example": "Brio RS MT"
                                                            },
                                                            "vehicle_plate_number": {
                                                                "type": "string",
                                                                "example": "D 1610 ZBC"
                                                            },
                                                            "trip_desc": {
                                                                "type": "string",
                                                                "example": "jalan2"
                                                            },
                                                            "trip_category": {
                                                                "type": "string",
                                                                "example": "Others"
                                                            },
                                                            "trip_origin_name": {
                                                                "type": "string",
                                                                "example": "Budi House"
                                                            },
                                                            "trip_person": {
                                                                "type": "string",
                                                                "example": "Budi",
                                                                "nullable": true
                                                            },
                                                            "trip_origin_coordinate": {
                                                                "type": "string",
                                                                "example": "-6.252640549671855, 106.76424433238519"
                                                            },
                                                            "trip_destination_name": {
                                                                "type": "string",
                                                                "example": "Central Park"
                                                            },
                                                            "trip_destination_coordinate": {
                                                                "type": "string",
                                                                "example": "-6.177464532426197, 106.7912179194768"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-06-19 07:54:42"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 14
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "trip failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "trip history not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Trip"
                ],
                "summary": "Post create trip",
                "description": "Create a new trip using `vehicle_id`, `trip_desc`, `trip_category`, `trip_origin_name`, `trip_person`, `trip_origin_coordinate`, `trip_destination_coordinate`, and `trip_destination_name`. This request is using MySQL database and send Telegram Message.",
                "operationId": "882a6a351df5af828e955f4b761b82db",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "vehicle_id",
                                    "trip_category",
                                    "trip_origin_name",
                                    "trip_destination_name"
                                ],
                                "properties": {
                                    "vehicle_id": {
                                        "type": "string",
                                        "example": "2d98f524-de02-11ed-b5ea-0242ac120002"
                                    },
                                    "trip_desc": {
                                        "type": "string",
                                        "example": "Business meeting"
                                    },
                                    "trip_category": {
                                        "type": "string",
                                        "example": "Business"
                                    },
                                    "trip_origin_name": {
                                        "type": "string",
                                        "example": "Office A"
                                    },
                                    "trip_person": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "trip_origin_coordinate": {
                                        "type": "string",
                                        "example": "-6.9175,107.6191"
                                    },
                                    "trip_destination_coordinate": {
                                        "type": "string",
                                        "example": "-6.2000,106.8167"
                                    },
                                    "trip_destination_name": {
                                        "type": "string",
                                        "example": "Office B"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Trip created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "trip created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "trip category must be at least 2 characters"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "trip category is a required field"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/trip/discovered": {
            "get": {
                "tags": [
                    "Trip"
                ],
                "summary": "Get trip discovered summary",
                "description": "This request is used to get trip discovered summary. This request is using MySql database, and have a protected routes.",
                "operationId": "c4b5b11c8d2f1bc00e399a6f1ba683e0",
                "responses": {
                    "200": {
                        "description": "trip fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "trip fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_trip": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "distance_km": {
                                                    "type": "string",
                                                    "example": "10.000 km"
                                                },
                                                "last_update": {
                                                    "type": "string",
                                                    "example": "2025-09-05 00:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "trip failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "trip not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/update_telegram_id": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update telegram token id",
                "operationId": "b3319a420453e08af500d97aa4d48b6d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "telegram_user_id"
                                ],
                                "properties": {
                                    "telegram_user_id": {
                                        "type": "string",
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "telegram id updated! and validation has been sended to you",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "telegram id updated! and validation has been sended to you"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "telegram id failed to update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "telegram user id has been used",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "telegram ID has been used. try another"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/validate_telegram_id": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Validate telegram id change",
                "operationId": "de1ceb7d57fb3bab1493d6315a623752",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "request_context"
                                ],
                                "properties": {
                                    "request_context": {
                                        "type": "string",
                                        "example": "A1B2C3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "telegram id has been validated"
                    },
                    "404": {
                        "description": "validation token is not valid"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/update_profile": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update profile",
                "operationId": "d8307a36aad6b3e10693a92193f8d4ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "username"
                                ],
                                "properties": {
                                    "telegram_user_id": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "tester@gmail.com"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "flazefy"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "profile updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "profile updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "telegram id failed to update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "username / email has been used",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "username or email has been used. try another"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/my_profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get my profile",
                "description": "This request is used to get user profile info. This request is using MySql database, and have a protected routes",
                "operationId": "c286fe042f9492a53f1a424547fa83e4",
                "responses": {
                    "200": {
                        "description": "user fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "17963858-9771-11ee-8f4a-3216422910r4"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "flazefy"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "flazen.edu@gmail.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "telegram_user_id": {
                                                    "type": "string",
                                                    "example": "1317625970"
                                                },
                                                "telegram_is_valid": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-20 22:53:47"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "telegram_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                },
                                                "request_type": {
                                                    "type": "string",
                                                    "example": "register"
                                                },
                                                "request_context": {
                                                    "type": "string",
                                                    "example": "OUW36L"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-20 22:53:47"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all user",
                "description": "This request is used to get all user. This endpoint for Admin only. This request is using MySql database, and have a protected routes",
                "operationId": "0068e396297c4f55d9c717181a67e82b",
                "responses": {
                    "200": {
                        "description": "user fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "17963858-9771-11ee-8f4a-3216422910r4"
                                                    },
                                                    "username": {
                                                        "type": "string",
                                                        "example": "flazefy"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "flazen.edu@gmail.com"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "example": "user"
                                                    },
                                                    "telegram_user_id": {
                                                        "type": "string",
                                                        "example": "1317625970"
                                                    },
                                                    "telegram_is_valid": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-09-20 22:53:47"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login | permission denied. only admin can use this request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/my_year": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get my year content",
                "description": "This request is used to get list of year in which the user has created content (Vehicle, Trip, Service, and Clean History). This request is using MySql database, and have a protected routes.",
                "operationId": "8f8d65302095f16adbc3960a60221f37",
                "responses": {
                    "200": {
                        "description": "user year fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user year fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "year": {
                                                        "type": "integer",
                                                        "example": 2024
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user year failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user year not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vehicle/{id}": {
            "put": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Put Vehicle Detail By Id",
                "description": "Update a new vehicle using `vehicle_name`, `vehicle_merk`, `vehicle_type`, `vehicle_price`, `vehicle_distance`, `vehicle_category`, `vehicle_status`, `vehicle_year_made`, `vehicle_plate_number`, `vehicle_fuel_status`, `vehicle_default_fuel`, `vehicle_color`, `vehicle_transmission`, and `vehicle_capacity`. This request is using MySQL database and send Telegram Message.",
                "operationId": "a00ec7b39268b8fb47c1480e59442e1b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "vehicle_name",
                                    "vehicle_merk",
                                    "vehicle_type",
                                    "vehicle_price",
                                    "vehicle_distance",
                                    "vehicle_category",
                                    "vehicle_status",
                                    "vehicle_year_made",
                                    "vehicle_plate_number",
                                    "vehicle_fuel_status",
                                    "vehicle_default_fuel",
                                    "vehicle_color",
                                    "vehicle_transmission",
                                    "vehicle_capacity"
                                ],
                                "properties": {
                                    "vehicle_name": {
                                        "type": "string",
                                        "example": "Kijang Innova 2.0 Type G MT"
                                    },
                                    "vehicle_merk": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "vehicle_type": {
                                        "type": "string",
                                        "example": "Minibus"
                                    },
                                    "vehicle_price": {
                                        "type": "integer",
                                        "example": 275000000
                                    },
                                    "vehicle_desc": {
                                        "type": "string",
                                        "example": "sudah jarang digunakan 2"
                                    },
                                    "vehicle_distance": {
                                        "type": "integer",
                                        "example": 90000
                                    },
                                    "vehicle_category": {
                                        "type": "string",
                                        "example": "Parents Car"
                                    },
                                    "vehicle_status": {
                                        "type": "string",
                                        "example": "Available"
                                    },
                                    "vehicle_year_made": {
                                        "type": "integer",
                                        "example": 2011
                                    },
                                    "vehicle_plate_number": {
                                        "type": "string",
                                        "example": "PA 1234 ZX"
                                    },
                                    "vehicle_fuel_status": {
                                        "type": "string",
                                        "example": "Not Monitored"
                                    },
                                    "vehicle_fuel_capacity": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "vehicle_default_fuel": {
                                        "type": "string",
                                        "example": "Pertamina Pertalite"
                                    },
                                    "vehicle_color": {
                                        "type": "string",
                                        "example": "White"
                                    },
                                    "vehicle_transmission": {
                                        "type": "string",
                                        "example": "Manual"
                                    },
                                    "vehicle_capacity": {
                                        "type": "integer",
                                        "example": 8
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle update"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "vehicle name must be at least 2 characters"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "vehicle type is a required field"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "vehicle type must be one of the following values City Car, Minibus, Motorcycle, Hatchback, Sedan, SUV, Pickup Truck, Convertible, Coupe, Van, Wagon, Crossover, Electric"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vehicle/header": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get all vehicle",
                "description": "This request is used to get all vehicle with pagination. This request is using MySql database, and have a protected routes.",
                "operationId": "6d70a56336f3eb7c41cd11d0b97a3bf8",
                "responses": {
                    "200": {
                        "description": "vehicle fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "2d98f524-de02-11ed-b5ea-0242ac120002"
                                                            },
                                                            "vehicle_name": {
                                                                "type": "string",
                                                                "example": "Brio RS MT"
                                                            },
                                                            "vehicle_desc": {
                                                                "type": "string",
                                                                "example": "snowy"
                                                            },
                                                            "vehicle_merk": {
                                                                "type": "string",
                                                                "example": "Honda"
                                                            },
                                                            "vehicle_type": {
                                                                "type": "string",
                                                                "example": "City Car"
                                                            },
                                                            "vehicle_distance": {
                                                                "type": "integer",
                                                                "example": 45000
                                                            },
                                                            "vehicle_category": {
                                                                "type": "string",
                                                                "example": "Personal Car"
                                                            },
                                                            "vehicle_status": {
                                                                "type": "string",
                                                                "example": "Available"
                                                            },
                                                            "vehicle_plate_number": {
                                                                "type": "string",
                                                                "example": "D 1610 ZBC"
                                                            },
                                                            "vehicle_fuel_status": {
                                                                "type": "string",
                                                                "example": "Normal"
                                                            },
                                                            "vehicle_default_fuel": {
                                                                "type": "string",
                                                                "example": "Shell Super"
                                                            },
                                                            "vehicle_color": {
                                                                "type": "string",
                                                                "example": "White"
                                                            },
                                                            "vehicle_capacity": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "vehicle_img_url": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-01-29 15:04:18"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 14
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vehicle/readiness": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get vehicle readiness",
                "description": "This request is used to get all vehicle that ready to drive with pagination. This request is using MySql database, and have a protected routes.",
                "operationId": "62b078376a3f2821bf66ed39b9c7d3ce",
                "responses": {
                    "200": {
                        "description": "vehicle fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "2d98f524-de02-11ed-b5ea-0242ac120002"
                                                            },
                                                            "vehicle_name": {
                                                                "type": "string",
                                                                "example": "Brio RS MT"
                                                            },
                                                            "vehicle_type": {
                                                                "type": "string",
                                                                "example": "City Car"
                                                            },
                                                            "vehicle_status": {
                                                                "type": "string",
                                                                "example": "Available"
                                                            },
                                                            "vehicle_plate_number": {
                                                                "type": "string",
                                                                "example": "D 1610 ZBC"
                                                            },
                                                            "vehicle_fuel_status": {
                                                                "type": "string",
                                                                "example": "Normal"
                                                            },
                                                            "vehicle_capacity": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "vehicle_transmission": {
                                                                "type": "string",
                                                                "example": "CVT"
                                                            },
                                                            "vehicle_readiness": {
                                                                "type": "integer",
                                                                "example": 8
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 14
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vehicle/name": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get all vehicle name",
                "description": "This request is used to get all vehicle name. This request is using MySql database, and have a protected routes.",
                "operationId": "f35309a39045fbff11e7a45bba2b6000",
                "responses": {
                    "200": {
                        "description": "vehicle fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "2d98f524-de02-11ed-b5ea-0242ac120002"
                                                    },
                                                    "vehicle_name": {
                                                        "type": "string",
                                                        "example": "Brio RS MT"
                                                    },
                                                    "vehicle_plate_number": {
                                                        "type": "string",
                                                        "example": "D 1610 ZBC"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vehicle/detail/{id}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get vehicle detail by id",
                "description": "This request is used to get vehicle detail by id. This request is using MySql database, and have a protected routes.",
                "operationId": "72eecbefc758130b99a60704c96174dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "4f33d5e4-de9f-11ed-b5ea-0242ac120002"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "vehicle fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "4f33d5e4-de9f-11ed-b5ea-0242ac120002"
                                                },
                                                "vehicle_name": {
                                                    "type": "string",
                                                    "example": "Kijang Innova 2.0 Type G MT"
                                                },
                                                "vehicle_merk": {
                                                    "type": "string",
                                                    "example": "Toyota"
                                                },
                                                "vehicle_type": {
                                                    "type": "string",
                                                    "example": "Minibus"
                                                },
                                                "vehicle_price": {
                                                    "type": "integer",
                                                    "example": 275000000
                                                },
                                                "vehicle_desc": {
                                                    "type": "string",
                                                    "example": "sudah jarang digunakan 2"
                                                },
                                                "vehicle_distance": {
                                                    "type": "integer",
                                                    "example": 90000
                                                },
                                                "vehicle_category": {
                                                    "type": "string",
                                                    "example": "Parents Car"
                                                },
                                                "vehicle_status": {
                                                    "type": "string",
                                                    "example": "Available"
                                                },
                                                "vehicle_year_made": {
                                                    "type": "integer",
                                                    "example": 2011
                                                },
                                                "vehicle_plate_number": {
                                                    "type": "string",
                                                    "example": "PA 1060 VZ"
                                                },
                                                "vehicle_fuel_status": {
                                                    "type": "string",
                                                    "example": "Not Monitored"
                                                },
                                                "vehicle_fuel_capacity": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "vehicle_default_fuel": {
                                                    "type": "string",
                                                    "example": "Pertamina Pertalite"
                                                },
                                                "vehicle_color": {
                                                    "type": "string",
                                                    "example": "White"
                                                },
                                                "vehicle_transmission": {
                                                    "type": "string",
                                                    "example": "Manual"
                                                },
                                                "vehicle_img_url": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "vehicle_other_img_url": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "vehicle_capacity": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "vehicle_document": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "fL9eDk"
                                                            },
                                                            "attach_type": {
                                                                "type": "string",
                                                                "example": "attachment_image"
                                                            },
                                                            "attach_name": {
                                                                "type": "string",
                                                                "example": "ini gambar"
                                                            },
                                                            "attach_url": {
                                                                "type": "string",
                                                                "format": "uri",
                                                                "example": "https://firebasestorage.googleapis.com/..."
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-03-27 04:03:34"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-07-08 02:13:45"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vehicle/detail/full/{id}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get vehicle full detail by id",
                "description": "This request is used to get vehicle detail by id, it comes with Clean and Trip History. This request is using MySql database, and have a protected routes.",
                "operationId": "093cfdf4530576f08b4f9c4b7c063627",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "4f33d5e4-de9f-11ed-b5ea-0242ac120002"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "vehicle fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "detail": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "format": "uuid",
                                                            "example": "2d98f524-de02-11ed-b5ea-0242ac120002"
                                                        },
                                                        "vehicle_name": {
                                                            "type": "string",
                                                            "example": "Brio RS MT"
                                                        },
                                                        "vehicle_merk": {
                                                            "type": "string",
                                                            "example": "Honda"
                                                        },
                                                        "vehicle_type": {
                                                            "type": "string",
                                                            "example": "City Car"
                                                        },
                                                        "vehicle_price": {
                                                            "type": "integer",
                                                            "example": 188000000
                                                        },
                                                        "vehicle_desc": {
                                                            "type": "string",
                                                            "example": "snowy"
                                                        },
                                                        "vehicle_distance": {
                                                            "type": "integer",
                                                            "example": 45000
                                                        },
                                                        "vehicle_category": {
                                                            "type": "string",
                                                            "example": "Personal Car"
                                                        },
                                                        "vehicle_status": {
                                                            "type": "string",
                                                            "example": "Available"
                                                        },
                                                        "vehicle_year_made": {
                                                            "type": "integer",
                                                            "example": 2020
                                                        },
                                                        "vehicle_plate_number": {
                                                            "type": "string",
                                                            "example": "D 1060 ZBC"
                                                        },
                                                        "vehicle_fuel_status": {
                                                            "type": "string",
                                                            "example": "Normal"
                                                        },
                                                        "vehicle_fuel_capacity": {
                                                            "type": "integer",
                                                            "example": 35
                                                        },
                                                        "vehicle_default_fuel": {
                                                            "type": "string",
                                                            "example": "Shell Super"
                                                        },
                                                        "vehicle_color": {
                                                            "type": "string",
                                                            "example": "White"
                                                        },
                                                        "vehicle_transmission": {
                                                            "type": "string",
                                                            "example": "CVT"
                                                        },
                                                        "vehicle_img_url": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "vehicle_other_img_url": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "vehicle_capacity": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "vehicle_document": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "datetime",
                                                            "example": "2024-03-27 04:03:34"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "datetime",
                                                            "example": "2025-01-29 15:04:18"
                                                        },
                                                        "deleted_at": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "trip": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "example": "28668090-5653-dff5-2d8f-af603fc36b45"
                                                                    },
                                                                    "trip_desc": {
                                                                        "type": "string",
                                                                        "example": "jalan2"
                                                                    },
                                                                    "trip_category": {
                                                                        "type": "string",
                                                                        "example": "Others"
                                                                    },
                                                                    "trip_person": {
                                                                        "type": "string",
                                                                        "example": "budi",
                                                                        "nullable": true
                                                                    },
                                                                    "trip_origin_name": {
                                                                        "type": "string",
                                                                        "example": "Place A"
                                                                    },
                                                                    "trip_origin_coordinate": {
                                                                        "type": "string",
                                                                        "example": "-6.226828716225759, 106.82152290589822"
                                                                    },
                                                                    "trip_destination_name": {
                                                                        "type": "string",
                                                                        "example": "Place B"
                                                                    },
                                                                    "trip_destination_coordinate": {
                                                                        "type": "string",
                                                                        "example": "-6.230792280916382, 106.81781530380249"
                                                                    },
                                                                    "created_at": {
                                                                        "type": "string",
                                                                        "format": "datetime",
                                                                        "example": "2025-01-29 16:46:45"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 14
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "clean": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "example": "ab8b8d0e-d74d-11ed-afa1-0242ac120002"
                                                                    },
                                                                    "clean_desc": {
                                                                        "type": "string",
                                                                        "example": "Cuci mobil"
                                                                    },
                                                                    "clean_by": {
                                                                        "type": "string",
                                                                        "example": "Carwash"
                                                                    },
                                                                    "clean_tools": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "is_clean_body": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "is_clean_window": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "is_clean_dashboard": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "is_clean_tires": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "is_clean_trash": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "is_clean_engine": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "is_clean_seat": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "is_clean_carpet": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "is_clean_pillows": {
                                                                        "type": "integer",
                                                                        "example": 0
                                                                    },
                                                                    "clean_address": {
                                                                        "type": "string",
                                                                        "example": "AutoService Jl. Kapten Tandean"
                                                                    },
                                                                    "clean_start_time": {
                                                                        "type": "string",
                                                                        "format": "datetime",
                                                                        "example": "2024-02-29 21:30:00"
                                                                    },
                                                                    "clean_end_time": {
                                                                        "type": "string",
                                                                        "format": "datetime",
                                                                        "example": "2024-02-29 22:20:00"
                                                                    },
                                                                    "is_fill_window_cleaning_water": {
                                                                        "type": "integer",
                                                                        "example": 0
                                                                    },
                                                                    "is_clean_hollow": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "created_at": {
                                                                        "type": "string",
                                                                        "format": "datetime",
                                                                        "example": "2024-03-27 12:33:05"
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 14
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vehicle/trip/summary/{id}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get vehicle trip summary by id",
                "description": "This request is used to get vehicle trip history summary by id. This request is using MySql database, and have a protected routes.",
                "operationId": "0ec160ab68e5614a26acd1f9e83f9c46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "4f33d5e4-de9f-11ed-b5ea-0242ac120002"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "vehicle fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "detail": {
                                                    "properties": {
                                                        "most_person_with": {
                                                            "type": "string",
                                                            "example": "budi"
                                                        },
                                                        "vehicle_total_trip_distance": {
                                                            "type": "decimal",
                                                            "example": 30.46
                                                        },
                                                        "most_origin": {
                                                            "type": "string",
                                                            "example": "Place A"
                                                        },
                                                        "most_destination": {
                                                            "type": "string",
                                                            "example": "Place B"
                                                        },
                                                        "most_category": {
                                                            "type": "string",
                                                            "example": "Office"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Admin": {
                "required": [
                    "id",
                    "username",
                    "password",
                    "email",
                    "telegram_is_valid",
                    "password",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "telegram_user_id": {
                        "description": "Telegram Account ID for Bot Apps",
                        "type": "string"
                    },
                    "telegram_is_valid": {
                        "description": "Validation status of attached telegram account",
                        "type": "boolean"
                    },
                    "username": {
                        "description": "Unique Identifier for admin",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email for Auth and Task Scheduling",
                        "type": "string"
                    },
                    "password": {
                        "description": "Sanctum Hashed Password",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the admin was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the admin was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Error": {
                "required": [
                    "id",
                    "message",
                    "stack_trace",
                    "file",
                    "line",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "message": {
                        "description": "Message or description of the error",
                        "type": "string"
                    },
                    "stack_trace": {
                        "description": "Trail of function calls leading up to the error",
                        "type": "string"
                    },
                    "file": {
                        "description": "Path of the file where the error is faced",
                        "type": "string"
                    },
                    "line": {
                        "description": "Line of code in specific file where the error is faced",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Timestamp when the error was faced",
                        "type": "string",
                        "format": "date-time"
                    },
                    "faced_by": {
                        "description": "ID of the user who specific faced the error",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "FailedJobs": {
                "required": [
                    "id",
                    "type",
                    "status",
                    "payload",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the failed jobs on Task Scheduling",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the failed jobs on Task Scheduling",
                        "type": "string"
                    },
                    "payload": {
                        "description": "Respond / Payload from the error",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the jobs had failed",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Fuel": {
                "required": [
                    "id",
                    "vehicle_id",
                    "fuel_volume",
                    "fuel_price_total",
                    "fuel_brand",
                    "fuel_type",
                    "fuel_ron",
                    "created_at",
                    "created_by",
                    "fuel_bill"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key of the fuel record",
                        "type": "integer"
                    },
                    "vehicle_id": {
                        "description": "Reference ID of the vehicle",
                        "type": "integer"
                    },
                    "fuel_volume": {
                        "description": "Total fuel volume filled (in liters)",
                        "type": "number",
                        "format": "float"
                    },
                    "fuel_price_total": {
                        "description": "Total price paid for the fuel",
                        "type": "number",
                        "format": "float"
                    },
                    "fuel_brand": {
                        "description": "Brand of the fuel",
                        "type": "string"
                    },
                    "fuel_type": {
                        "description": "Type of fuel",
                        "type": "string"
                    },
                    "fuel_ron": {
                        "description": "Research Octane Number (RON) of the fuel",
                        "type": "integer"
                    },
                    "fuel_bill": {
                        "description": "URL or path to the uploaded fuel bill image",
                        "type": "string",
                        "format": "uri"
                    },
                    "created_at": {
                        "description": "Timestamp when the fuel record was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who created the fuel record",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "History": {
                "required": [
                    "id",
                    "history_type",
                    "history_context",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "history_type": {
                        "description": "Type of the history",
                        "type": "string"
                    },
                    "history_context": {
                        "description": "Context of the history",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the user created the history",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who created the history",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "id",
                    "username",
                    "password",
                    "email",
                    "telegram_is_valid",
                    "password",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "telegram_user_id": {
                        "description": "Telegram Account ID for Bot Apps",
                        "type": "string"
                    },
                    "telegram_is_valid": {
                        "description": "Validation status of attached telegram account",
                        "type": "boolean"
                    },
                    "username": {
                        "description": "Unique Identifier for user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email for Auth and Task Scheduling",
                        "type": "string"
                    },
                    "password": {
                        "description": "Sanctum Hashed Password",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the user was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the user was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ValidateRequest": {
                "required": [
                    "id",
                    "request_type",
                    "request_context",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "request_type": {
                        "description": "Type of the request",
                        "type": "string"
                    },
                    "request_context": {
                        "description": "Context of the request",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the user make the request",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who make the request",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "JWT Authorization header using the Bearer scheme",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Clean",
            "description": "Clean"
        },
        {
            "name": "Dictionary",
            "description": "Dictionary"
        },
        {
            "name": "Fuel",
            "description": "Fuel"
        },
        {
            "name": "History",
            "description": "History"
        },
        {
            "name": "Question",
            "description": "Question"
        },
        {
            "name": "Reminder",
            "description": "Reminder"
        },
        {
            "name": "Stats",
            "description": "Stats"
        },
        {
            "name": "Trip",
            "description": "Trip"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Vehicle",
            "description": "Vehicle"
        }
    ]
}